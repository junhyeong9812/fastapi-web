version: "3.8"

services:
  # ==========================================
  # Elasticsearch (검색 엔진)
  # ==========================================
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.monitoring.collection.enabled=false
      - cluster.name=fastapi-cluster
      - node.name=fastapi-node
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - ./docker/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - fastapi-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ==========================================
  # Kibana (Elasticsearch 시각화)
  # ==========================================
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.9
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_NAME=kibana
      - SERVER_HOST=0.0.0.0
    volumes:
      - ./docker/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    ports:
      - "5601:5601"
    networks:
      - fastapi-network
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ==========================================
  # MariaDB (관계형 데이터베이스)
  # ==========================================
  mariadb:
    image: mariadb:10.11
    container_name: mariadb
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=fastapi_db
      - MYSQL_USER=fastapi_user
      - MYSQL_PASSWORD=fastapi_password
      - MYSQL_CHARACTER_SET_SERVER=utf8mb4
      - MYSQL_COLLATION_SERVER=utf8mb4_unicode_ci
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./docker/mariadb/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./docker/mariadb/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    ports:
      - "3306:3306"
    networks:
      - fastapi-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-prootpassword",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  # ==========================================
  # MongoDB (문서형 데이터베이스)
  # ==========================================
  mongodb:
    image: mongo:7.0
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=adminpassword
      - MONGO_INITDB_DATABASE=fastapi_db
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - fastapi-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ==========================================
  # Redis (캐싱 및 세션 저장소)
  # ==========================================
  redis:
    image: redis:7.2-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fastapi-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    command: redis-server --appendonly yes

  # ==========================================
  # FastAPI 애플리케이션 (선택적)
  # ==========================================
  fastapi-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi-app
    environment:
      - DATABASE_URL=mysql+aiomysql://fastapi_user:fastapi_password@mariadb:3306/fastapi_db
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - MONGODB_URL=mongodb://admin:adminpassword@mongodb:27017/fastapi_db?authSource=admin
      - REDIS_URL=redis://redis:6379
    ports:
      - "8000:8000"
    networks:
      - fastapi-network
    depends_on:
      mariadb:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

# ==========================================
# 네트워크 설정
# ==========================================
networks:
  fastapi-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# ==========================================
# 볼륨 설정
# ==========================================
volumes:
  elasticsearch_data:
    driver: local
  mariadb_data:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local
